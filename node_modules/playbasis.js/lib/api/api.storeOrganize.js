'use strict';





module.exports=function(Playbasis){


var http=Playbasis.http;
var helpers=Playbasis.helpers;


var apiMethodUrl="StoreOrg";


var api=Playbasis.storeOrganizeApi={};

















api.listOrganizations=function(options)
{
var keys=["id","search","sort","order","offset","limit"];
var dvalues=[null,null,"name","asc",0,20];

return http.getJsonAsync(helpers.createApiUrl(apiMethodUrl,"organizes")+helpers.appendAndJoinIfNotNullAsUrlParam2(keys,dvalues,options));
};


















api.listNodes=function(options)
{
var keys=["id","organize_id","parent_id","search","sort","order","offset","limit"];
var dvalues=[null,null,null,null,"name","asc",0,20];

return http.getJsonAsync(helpers.createApiUrl(apiMethodUrl,"nodes")+helpers.appendAndJoinIfNotNullAsUrlParam2(keys,dvalues,options));
};









api.addPlayerToNode=function(nodeId,playerId)
{
var obj={token:Playbasis.env.global.token};

return http.postJsonAsync(helpers.createApiUrl(apiMethodUrl,"nodes",nodeId,"addPlayer",playerId),obj);
};









api.removePlayerFromNode=function(nodeId,playerId)
{
var obj={token:Playbasis.env.global.token};

return http.postJsonAsync(helpers.createApiUrl(apiMethodUrl,"nodes",nodeId,"removePlayer",playerId),obj);
};










api.setPlayerRole=function(nodeId,playerId,role)
{
var obj={token:Playbasis.env.global.token,role:role};

return http.postJsonAsync(helpers.createApiUrl(apiMethodUrl,"nodes",nodeId,"setPlayerRole",playerId),obj);
};










api.unsetPlayerRole=function(nodeId,playerId,role)
{
var obj={token:Playbasis.env.global.token,role:role};

return http.postJsonAsync(helpers.createApiUrl(apiMethodUrl,"nodes",nodeId,"unsetPlayerRole",playerId),obj);
};













api.listPlayerFromNode=function(nodeId,options)
{
var keys=["role"];
var dvalues=[null];

return http.getJsonAsync(helpers.createApiUrl(apiMethodUrl,"players",nodeId)+helpers.appendAndJoinIfNotNullAsUrlParam2(keys,dvalues,options));
};




















api.peerLeaderboard=function(nodeId,rankBy,options)
{
var keys=["page","limit","under_org","role","player_id","month","year"];
var dvalues=[0,20,"false",null,null,null,null];

return http.getJsonAsync(helpers.createApiUrl(apiMethodUrl,"rankPeer",nodeId,rankBy)+helpers.appendAndJoinIfNotNullAsUrlParam2(keys,dvalues,options));
};




















api.peerLeaderboardByAction=function(nodeId,action,parameter,options)
{
var keys=["role","page","limit","player_id","month","year"];
var dvalues=[null,0,20,null,null,null];

return http.getJsonAsync(helpers.createApiUrl(apiMethodUrl,"rankPeerByAccAction",nodeId,action,parameter)+helpers.appendAndJoinIfNotNullAsUrlParam2(keys,dvalues,options));
};









api.findChildNodes=function(nodeId,layer)
{
return http.getJsonAsync(helpers.createApiUrl(apiMethodUrl,"nodes",nodeId,"getChildNode",layer));
};
















api.saleReport=function(nodeId,options)
{
var keys=["month","year","action","parameter"];
var dvalues=[null,null,null,null];

return http.getJsonAsync(helpers.createApiUrl(apiMethodUrl,"nodes",nodeId,"saleReport")+helpers.appendAndJoinIfNotNullAsUrlParam2(keys,dvalues,options));
};

















api.saleHistory=function(nodeId,count,options)
{
var keys=["month","year","action","parameter"];
var dvalues=[null,null,null,null];

return http.getJsonAsync(helpers.createApiUrl(apiMethodUrl,"nodes",nodeId,"saleHistory",count)+helpers.appendAndJoinIfNotNullAsUrlParam2(keys,dvalues,options));
};



















api.saleBoard=function(nodeId,layer,options)
{
var keys=["month","year","action","parameter","page","limit"];
var dvalues=[null,null,null,null,0,20];

return http.getJsonAsync(helpers.createApiUrl(apiMethodUrl,"nodes",nodeId,"saleBoard",layer)+helpers.appendAndJoinIfNotNullAsUrlParam2(keys,dvalues,options));
};









api.addContentToNode=function(nodeId,contentNodeId)
{
var obj={token:Playbasis.env.global.token};

return http.postJsonAsync(helpers.createApiUrl(apiMethodUrl,"nodes",nodeId,"addContent",contentNodeId),obj);
};









api.removeContentFromNode=function(nodeId,contentNodeId)
{
var obj={token:Playbasis.env.global.token};

return http.postJsonAsync(helpers.createApiUrl(apiMethodUrl,"nodes",nodeId,"removeContent",contentNodeId),obj);
};










api.setContentRole=function(nodeId,contentNodeId,role)
{
var obj={token:Playbasis.env.global.token,role:role};

return http.postJsonAsync(helpers.createApiUrl(apiMethodUrl,"nodes",nodeId,"setContentRole",contentNodeId),obj);
};










api.unsetContentRole=function(nodeId,contentNodeId,role)
{
var obj={token:Playbasis.env.global.token,role:role};

return http.postJsonAsync(helpers.createApiUrl(apiMethodUrl,"nodes",nodeId,"unsetContentRole",contentNodeId),obj);
};
};